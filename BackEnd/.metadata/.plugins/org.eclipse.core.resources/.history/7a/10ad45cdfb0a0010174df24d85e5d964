package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dto.LoginDTO;
import com.example.demo.entities.HR;
import com.example.demo.service.HRService;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

@RestController
@RequestMapping("/auth")
public class HRController {

    @Autowired
    private HRService hrService;

    @PostMapping("/register/hr")
    public HR registerHR(@RequestBody HR hr) {
        return hrService.registerHR(hr);
    }

    @PostMapping("/login/hr")
    public String loginEmployee(@RequestBody LoginDTO loginDTO, HttpServletRequest request) {
        HR hr = hrService.authenticate(loginDTO.getEmail(), loginDTO.getPassword());

        if (hr != null) {
            HttpSession session = request.getSession(true); 
            session.setAttribute("userHR", hr);
            return "Login successful!";
        } else {
            return "Invalid email or password";
        }
    }

    @GetMapping("/session/hr")
    public String checkSession(HttpSession session) {
        HR user = (HR) session.getAttribute("user");
        String role = (String) session.getAttribute("role");
        if (user != null) {
            return "User is logged in: " + user.getName();
        } else {
            return "No active session found";
        }
    }

    @GetMapping("/logout/hr")
    public String logout(HttpSession session) {
        session.invalidate(); 
        return "Logged out successfully";
    }
    
    @GetMapping("/all/hr")
    public List<HR> getAllHR(){
    	return hrService.getAllHR();
    }
    
    @GetMapping("/hr/{email}")
    public HR getHRByEmail(@PathVariable String email, HttpSession session) {
        HR user = (HR) session.getAttribute("user");
        if (user != null) {
            return hrService.getHRByEmail(email);
        } else {
            return null; 
        }
    }
}